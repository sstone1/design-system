import{a as V,j as t}from"./jsx-runtime-CHAcsyq4.js";import{r as d}from"./index-CO9pbFv1.js";import"./complete-DfKDyCth.js";import"./in-progress-BhDVRM7c.js";import"./not-started-C2GCbdX0.js";import{E as pe}from"./edit-CoTvdx8D.js";import{c as ce}from"./chevron-CuO2MovR.js";import"./tick-D-0rNWa6.js";import"./tick-circle-DEx8Rvru.js";import"./info-outlined-BO35JMI8.js";import"./check-circle-N73EjHKU.js";import"./error-outlined-Cly8x-70.js";import"./index-BdESLZbP.js";import"./upload-CswRUNEI.js";import"./trash-vMOCOH0P.js";import"./cog-outlined-C34frKMW.js";import"./warning-DrjxdJ9G.js";import{g as D,a as k,s as c}from"./generateUtilityClasses-HyxggqFg.js";import{m as y,u as _,c as P,a as B}from"./DefaultPropsProvider-2af-l9uX.js";import{u as U}from"./useSlot-DP9B20k_.js";import{P as ue}from"./Paper-CaVeEWD5.js";import{u as me}from"./useControlled-YZkScxzg.js";import{C as fe}from"./Collapse-e5AQuANn.js";import{B as ge}from"./ButtonBase-B7CczDew.js";import{T as H}from"./Typography-Cx8-JiCk.js";import{B as he}from"./Box-B2aKkEL4.js";import"./_commonjsHelpers-BosuxZz1.js";import"./cross-CurIqIFj.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-D-IwIA3q.js";import"./resolveComponentProps-BELqttVG.js";import"./useForkRef-DZzpmK-L.js";import"./useTheme-CuVpbpSA.js";import"./useTheme-D1elzDqp.js";import"./utils-Cl6tLB4R.js";import"./assertThisInitialized-LnzLPM7_.js";import"./index-BT32HCm8.js";import"./emotion-react.browser.esm-BYpQlU2q.js";import"./useEnhancedEffect-l_FsEN0U.js";import"./isFocusVisible-B8k4qzLc.js";import"./index-BiGVQ-Oa.js";import"./extendSxProp-DXPFALOx.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./capitalize-_axBoSLA.js";const ee=d.createContext({});function ye(e){return k("MuiAccordion",e)}const v=D("MuiAccordion",["root","heading","rounded","expanded","disabled","gutters","region"]),be=e=>{const{classes:a,square:n,expanded:o,disabled:i,disableGutters:s}=e;return B({root:["root",!n&&"rounded",o&&"expanded",i&&"disabled",!s&&"gutters"],heading:["heading"],region:["region"]},ye,a)},ve=c(ue,{name:"MuiAccordion",slot:"Root",overridesResolver:(e,a)=>{const{ownerState:n}=e;return[{[`& .${v.region}`]:a.region},a.root,!n.square&&a.rounded,!n.disableGutters&&a.gutters]}})(y(({theme:e})=>{const a={duration:e.transitions.duration.shortest};return{position:"relative",transition:e.transitions.create(["margin"],a),overflowAnchor:"none","&::before":{position:"absolute",left:0,top:-1,right:0,height:1,content:'""',opacity:1,backgroundColor:(e.vars||e).palette.divider,transition:e.transitions.create(["opacity","background-color"],a)},"&:first-of-type":{"&::before":{display:"none"}},[`&.${v.expanded}`]:{"&::before":{opacity:0},"&:first-of-type":{marginTop:0},"&:last-of-type":{marginBottom:0},"& + &":{"&::before":{display:"none"}}},[`&.${v.disabled}`]:{backgroundColor:(e.vars||e).palette.action.disabledBackground}}}),y(({theme:e})=>({variants:[{props:a=>!a.square,style:{borderRadius:0,"&:first-of-type":{borderTopLeftRadius:(e.vars||e).shape.borderRadius,borderTopRightRadius:(e.vars||e).shape.borderRadius},"&:last-of-type":{borderBottomLeftRadius:(e.vars||e).shape.borderRadius,borderBottomRightRadius:(e.vars||e).shape.borderRadius,"@supports (-ms-ime-align: auto)":{borderBottomLeftRadius:0,borderBottomRightRadius:0}}}},{props:a=>!a.disableGutters,style:{[`&.${v.expanded}`]:{margin:"16px 0"}}}]}))),xe=c("h3",{name:"MuiAccordion",slot:"Heading",overridesResolver:(e,a)=>a.heading})({all:"unset"}),qe=d.forwardRef(function(a,n){const o=_({props:a,name:"MuiAccordion"}),{children:i,className:s,defaultExpanded:r=!1,disabled:p=!1,disableGutters:u=!1,expanded:b,onChange:m,square:C=!1,slots:A={},slotProps:I={},TransitionComponent:E,TransitionProps:f,...g}=o,[l,$]=me({controlled:b,default:r,name:"Accordion",state:"expanded"}),G=d.useCallback(de=>{$(!l),m&&m(de,!l)},[l,m,$]),[w,...ae]=d.Children.toArray(i),ne=d.useMemo(()=>({expanded:l,disabled:p,disableGutters:u,toggle:G}),[l,p,u,G]),T={...o,square:C,disabled:p,disableGutters:u,expanded:l},N=be(T),te={transition:E,...A},oe={transition:f,...I},W={slots:te,slotProps:oe},[ie,se]=U("heading",{elementType:xe,externalForwardedProps:W,className:N.heading,ownerState:T}),[re,le]=U("transition",{elementType:fe,externalForwardedProps:W,ownerState:T});return V(ve,{className:P(N.root,s),ref:n,ownerState:T,square:C,...g,children:[t(ie,{...se,children:t(ee.Provider,{value:ne,children:w})}),t(re,{in:l,timeout:"auto",...le,children:t("div",{"aria-labelledby":w.props.id,id:w.props["aria-controls"],role:"region",className:N.region,children:ae})})]})});function Se(e){return k("MuiAccordionDetails",e)}D("MuiAccordionDetails",["root"]);const Ce=e=>{const{classes:a}=e;return B({root:["root"]},Se,a)},Ae=c("div",{name:"MuiAccordionDetails",slot:"Root",overridesResolver:(e,a)=>a.root})(y(({theme:e})=>({padding:e.spacing(1,2,2)}))),Ie=d.forwardRef(function(a,n){const o=_({props:a,name:"MuiAccordionDetails"}),{className:i,...s}=o,r=o,p=Ce(r);return t(Ae,{className:P(p.root,i),ref:n,ownerState:r,...s})});function Te(e){return k("MuiAccordionSummary",e)}const h=D("MuiAccordionSummary",["root","expanded","focusVisible","disabled","gutters","contentGutters","content","expandIconWrapper"]),Ve=e=>{const{classes:a,expanded:n,disabled:o,disableGutters:i}=e;return B({root:["root",n&&"expanded",o&&"disabled",!i&&"gutters"],focusVisible:["focusVisible"],content:["content",n&&"expanded",!i&&"contentGutters"],expandIconWrapper:["expandIconWrapper",n&&"expanded"]},Te,a)},Pe=c(ge,{name:"MuiAccordionSummary",slot:"Root",overridesResolver:(e,a)=>a.root})(y(({theme:e})=>{const a={duration:e.transitions.duration.shortest};return{display:"flex",width:"100%",minHeight:48,padding:e.spacing(0,2),transition:e.transitions.create(["min-height","background-color"],a),[`&.${h.focusVisible}`]:{backgroundColor:(e.vars||e).palette.action.focus},[`&.${h.disabled}`]:{opacity:(e.vars||e).palette.action.disabledOpacity},[`&:hover:not(.${h.disabled})`]:{cursor:"pointer"},variants:[{props:n=>!n.disableGutters,style:{[`&.${h.expanded}`]:{minHeight:64}}}]}})),Re=c("span",{name:"MuiAccordionSummary",slot:"Content",overridesResolver:(e,a)=>a.content})(y(({theme:e})=>({display:"flex",textAlign:"start",flexGrow:1,margin:"12px 0",variants:[{props:a=>!a.disableGutters,style:{transition:e.transitions.create(["margin"],{duration:e.transitions.duration.shortest}),[`&.${h.expanded}`]:{margin:"20px 0"}}}]}))),Ee=c("span",{name:"MuiAccordionSummary",slot:"ExpandIconWrapper",overridesResolver:(e,a)=>a.expandIconWrapper})(y(({theme:e})=>({display:"flex",color:(e.vars||e).palette.action.active,transform:"rotate(0deg)",transition:e.transitions.create("transform",{duration:e.transitions.duration.shortest}),[`&.${h.expanded}`]:{transform:"rotate(180deg)"}}))),we=d.forwardRef(function(a,n){const o=_({props:a,name:"MuiAccordionSummary"}),{children:i,className:s,expandIcon:r,focusVisibleClassName:p,onClick:u,...b}=o,{disabled:m=!1,disableGutters:C,expanded:A,toggle:I}=d.useContext(ee),E=l=>{I&&I(l),u&&u(l)},f={...o,expanded:A,disabled:m,disableGutters:C},g=Ve(f);return V(Pe,{focusRipple:!1,disableRipple:!0,disabled:m,"aria-expanded":A,className:P(g.root,s),focusVisibleClassName:P(g.focusVisible,p),onClick:E,ref:n,ownerState:f,...b,children:[t(Re,{className:g.content,ownerState:f,children:i}),r&&t(Ee,{className:g.expandIconWrapper,ownerState:f,children:r})]})}),R=c(e=>t(qe,{disableGutters:!0,elevation:0,...e}))(({theme:e,expanded:a,bordered:n=!0})=>({"&.MuiAccordion-root":{borderRadius:"9px",...a?{border:`1px solid ${e.palette.highlight.main}`}:{border:n?`1.5px solid ${e.palette.neutral[100]}`:"none"},padding:"28px 48px 36px 40px",position:"relative","&:before":{display:"none"},"&:hover":{...a?{}:{border:{border:n?`1px solid ${e.palette.highlight.main}`:"none"},boxShadow:{border:n?"0px 8px 16px 0px rgba(96, 97, 112, 0.16), 0px 2px 4px 0px rgba(40, 41, 61, 0.04)":"none"}}}}}));try{R.displayName="Accordion",R.__docgenInfo={description:"",displayName:"Accordion",props:{bordered:{defaultValue:null,description:"",name:"bordered",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"NonNullable<ReactNode> & ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AccordionClasses> & Partial<ClassNameMap<never>>"}},defaultExpanded:{defaultValue:{value:"false"},description:"If `true`, expands the accordion by default.",name:"defaultExpanded",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableGutters:{defaultValue:{value:"false"},description:"If `true`, it removes the margin between two expanded accordion items and the increase of height.",name:"disableGutters",required:!1,type:{name:"boolean"}},expanded:{defaultValue:null,description:"If `true`, expands the accordion, otherwise collapse it.\nSetting this prop enables control over the accordion.",name:"expanded",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Callback fired when the expand/collapse state is changed.\n@param event The event source of the callback. **Warning**: This is a generic event not a change event.\n@param expanded The `expanded` state of the accordion.",name:"onChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, expanded: boolean) => void"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},TransitionComponent:{defaultValue:null,description:"The component used for the transition.\n[Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n@deprecated Use `slots.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"TransitionComponent",required:!1,type:{name:"JSXElementConstructor<TransitionProps & { children?: ReactElement<unknown, any>; }>"}},TransitionProps:{defaultValue:null,description:"Props applied to the transition element.\nBy default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n@deprecated Use `slotProps.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"TransitionProps",required:!1,type:{name:"TransitionProps"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<AccordionSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ heading?: SlotProps<ElementType<HTMLProps<HTMLHeadingElement>, keyof IntrinsicElements>, AccordionHeadingSlotPropsOverrides, AccordionOwnerState>; transition?: SlotProps<...>; }"}},elevation:{defaultValue:{value:"1"},description:"Shadow depth, corresponds to `dp` in the spec.\nIt accepts values between 0 and 24 inclusive.",name:"elevation",required:!1,type:{name:"number"}},square:{defaultValue:{value:"false"},description:"If `true`, rounded corners are disabled.",name:"square",required:!1,type:{name:"boolean"}},variant:{defaultValue:{value:"'elevation'"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"elevation"'},{value:'"outlined"'}]}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}const M=c(e=>t(Ie,{id:"panel-content",...e}))(()=>({padding:"0"}));try{M.displayName="AccordionDetails",M.__docgenInfo={description:"",displayName:"AccordionDetails",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AccordionDetailsClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}const O=c(e=>t(we,{"aria-controls":"panel-content",...e}))(({theme:e})=>({padding:"0",display:"flex",alignItems:"flex-start",[`& .${v.expanded}`]:{transform:"none !important",translate:"unset !important"},"&.MuiButtonBase-root":{".MuiAccordionSummary-content":{margin:"0"}},"& .MuiAccordionSummary-expandIconWrapper":{color:e.palette.neutral[600],fontFamily:e.typography.fontFamily,fontStyle:"normal",fontWeight:e.typography.button.fontWeight,"& .MuiBox-root":{justifyContent:"center",display:"flex"}}}));try{O.displayName="AccordionSummary",O.__docgenInfo={description:"",displayName:"AccordionSummary",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<AccordionSummaryClasses> & Partial<ClassNameMap<never>>"}},expandIcon:{defaultValue:null,description:"The icon to display as the expand indicator.",name:"expandIcon",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:`This prop can help identify which element has keyboard focus.
The class name will be applied when the element gains the focus through keyboard interaction.
It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a \`focus-visible\` class to other components
if needed.`,name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}const qa={component:R,title:"Components/Accordion",parameters:{design:{type:"figma",url:"https://www.figma.com/file/TmLDXXPGbkFMMk1K1Gexmg/5.-Set-up-equity-placement-form?type=design&node-id=1059-258295&mode=dev"}}},L=({expanded:e=!1,bordered:a})=>{const[n,o]=d.useState(e),i=n?"Collapse":"Edit",s=n?t(ce,{}):t(pe,{}),r=t(H,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus dui mauris, porttitor sit amet tincidunt at, volutpat eget nulla. Quisque id libero eget augue accumsan suscipit. Nulla laoreet est ut quam dapibus volutpat."}),p=t(H,{children:"Nunc mattis, dolor id feugiat pellentesque, risus mauris sagittis nibh, id ornare leo enim non justo. Morbi nec nulla vel lacus eleifend dignissim. Suspendisse non porta urna. Curabitur non quam aliquam, congue arcu vel, facilisis erat. In non arcu vel magna rutrum tristique a eu velit. Vestibulum quis porta quam, at tempus libero. Sed fringilla a sapien ut maximus. Mauris convallis nisi eu magna placerat, vitae gravida mi rhoncus. Sed placerat massa ut velit ornare venenatis. Donec gravida facilisis nulla, quis lacinia velit finibus sit amet."}),u=()=>{o(m=>!m)},b=V(he,{alignItems:"center",gap:"5px",children:[s,i]});return d.useEffect(()=>{o(e)},[e]),V(R,{expanded:n,bordered:a,onChange:u,children:[t(O,{expandIcon:b,children:r}),t(M,{children:p})]})},x=L.bind({});x.args={};const q=L.bind({});q.args={bordered:!1};const S=L.bind({});S.args={expanded:!0};var F,j,Q;x.parameters={...x.parameters,docs:{...(F=x.parameters)==null?void 0:F.docs,source:{originalSource:`({
  expanded = false,
  bordered
}) => {
  const [isOpen, setIsOpen] = useState(expanded);
  const expandLabel = isOpen ? 'Collapse' : 'Edit';
  const expandIcon = isOpen ? <ChevronUp /> : <EditIcon />;
  const PlaceholderSummary = <Typography>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus dui mauris, porttitor sit
      amet tincidunt at, volutpat eget nulla. Quisque id libero eget augue accumsan suscipit. Nulla
      laoreet est ut quam dapibus volutpat.
    </Typography>;
  const PlaceholderDetails = <Typography>
      Nunc mattis, dolor id feugiat pellentesque, risus mauris sagittis nibh, id ornare leo enim non
      justo. Morbi nec nulla vel lacus eleifend dignissim. Suspendisse non porta urna. Curabitur non
      quam aliquam, congue arcu vel, facilisis erat. In non arcu vel magna rutrum tristique a eu
      velit. Vestibulum quis porta quam, at tempus libero. Sed fringilla a sapien ut maximus. Mauris
      convallis nisi eu magna placerat, vitae gravida mi rhoncus. Sed placerat massa ut velit ornare
      venenatis. Donec gravida facilisis nulla, quis lacinia velit finibus sit amet.
    </Typography>;
  const toggleCollapse = () => {
    setIsOpen(prevOpen => !prevOpen);
  };
  const ExpandIcon = <Box alignItems="center" gap="5px">
      {expandIcon}
      {expandLabel}
    </Box>;
  useEffect(() => {
    setIsOpen(expanded);
  }, [expanded]);
  return <Accordion expanded={isOpen} bordered={bordered} onChange={toggleCollapse}>
      <AccordionSummary expandIcon={ExpandIcon}>{PlaceholderSummary}</AccordionSummary>
      <AccordionDetails>{PlaceholderDetails}</AccordionDetails>
    </Accordion>;
}`,...(Q=(j=x.parameters)==null?void 0:j.docs)==null?void 0:Q.source}}};var X,J,K;q.parameters={...q.parameters,docs:{...(X=q.parameters)==null?void 0:X.docs,source:{originalSource:`({
  expanded = false,
  bordered
}) => {
  const [isOpen, setIsOpen] = useState(expanded);
  const expandLabel = isOpen ? 'Collapse' : 'Edit';
  const expandIcon = isOpen ? <ChevronUp /> : <EditIcon />;
  const PlaceholderSummary = <Typography>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus dui mauris, porttitor sit
      amet tincidunt at, volutpat eget nulla. Quisque id libero eget augue accumsan suscipit. Nulla
      laoreet est ut quam dapibus volutpat.
    </Typography>;
  const PlaceholderDetails = <Typography>
      Nunc mattis, dolor id feugiat pellentesque, risus mauris sagittis nibh, id ornare leo enim non
      justo. Morbi nec nulla vel lacus eleifend dignissim. Suspendisse non porta urna. Curabitur non
      quam aliquam, congue arcu vel, facilisis erat. In non arcu vel magna rutrum tristique a eu
      velit. Vestibulum quis porta quam, at tempus libero. Sed fringilla a sapien ut maximus. Mauris
      convallis nisi eu magna placerat, vitae gravida mi rhoncus. Sed placerat massa ut velit ornare
      venenatis. Donec gravida facilisis nulla, quis lacinia velit finibus sit amet.
    </Typography>;
  const toggleCollapse = () => {
    setIsOpen(prevOpen => !prevOpen);
  };
  const ExpandIcon = <Box alignItems="center" gap="5px">
      {expandIcon}
      {expandLabel}
    </Box>;
  useEffect(() => {
    setIsOpen(expanded);
  }, [expanded]);
  return <Accordion expanded={isOpen} bordered={bordered} onChange={toggleCollapse}>
      <AccordionSummary expandIcon={ExpandIcon}>{PlaceholderSummary}</AccordionSummary>
      <AccordionDetails>{PlaceholderDetails}</AccordionDetails>
    </Accordion>;
}`,...(K=(J=q.parameters)==null?void 0:J.docs)==null?void 0:K.source}}};var z,Y,Z;S.parameters={...S.parameters,docs:{...(z=S.parameters)==null?void 0:z.docs,source:{originalSource:`({
  expanded = false,
  bordered
}) => {
  const [isOpen, setIsOpen] = useState(expanded);
  const expandLabel = isOpen ? 'Collapse' : 'Edit';
  const expandIcon = isOpen ? <ChevronUp /> : <EditIcon />;
  const PlaceholderSummary = <Typography>
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus dui mauris, porttitor sit
      amet tincidunt at, volutpat eget nulla. Quisque id libero eget augue accumsan suscipit. Nulla
      laoreet est ut quam dapibus volutpat.
    </Typography>;
  const PlaceholderDetails = <Typography>
      Nunc mattis, dolor id feugiat pellentesque, risus mauris sagittis nibh, id ornare leo enim non
      justo. Morbi nec nulla vel lacus eleifend dignissim. Suspendisse non porta urna. Curabitur non
      quam aliquam, congue arcu vel, facilisis erat. In non arcu vel magna rutrum tristique a eu
      velit. Vestibulum quis porta quam, at tempus libero. Sed fringilla a sapien ut maximus. Mauris
      convallis nisi eu magna placerat, vitae gravida mi rhoncus. Sed placerat massa ut velit ornare
      venenatis. Donec gravida facilisis nulla, quis lacinia velit finibus sit amet.
    </Typography>;
  const toggleCollapse = () => {
    setIsOpen(prevOpen => !prevOpen);
  };
  const ExpandIcon = <Box alignItems="center" gap="5px">
      {expandIcon}
      {expandLabel}
    </Box>;
  useEffect(() => {
    setIsOpen(expanded);
  }, [expanded]);
  return <Accordion expanded={isOpen} bordered={bordered} onChange={toggleCollapse}>
      <AccordionSummary expandIcon={ExpandIcon}>{PlaceholderSummary}</AccordionSummary>
      <AccordionDetails>{PlaceholderDetails}</AccordionDetails>
    </Accordion>;
}`,...(Z=(Y=S.parameters)==null?void 0:Y.docs)==null?void 0:Z.source}}};const Sa=["Collapsed","CollapsedWithoutBorder","Expanded"];export{x as Collapsed,q as CollapsedWithoutBorder,S as Expanded,Sa as __namedExportsOrder,qa as default};
