import{j as s}from"./jsx-runtime-CHAcsyq4.js";import{r as u}from"./index-CO9pbFv1.js";import{P as e}from"./phone-number-input-DeRe-Wn_.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-BT32HCm8.js";import"./styled-YeRgfiRQ.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-2tmYIofL.js";import"./Typography-B9EEOqS3.js";import"./index-DHjCJufJ.js";import"./extendSxProp-BJFBh0CD.js";import"./useTheme-DyIePcff.js";import"./emotion-react.browser.esm-Dv-6nvuE.js";import"./DefaultPropsProvider-GIfS_qv3.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ListItemText-Cjoa6llw.js";import"./MenuItem-DSnCBr0u.js";import"./List--keKdrVz.js";import"./ButtonBase-CqaC8XFo.js";import"./assertThisInitialized-C1KLUksq.js";import"./useForkRef-DZzpmK-L.js";import"./useEnhancedEffect-D1zchTAJ.js";import"./isFocusVisible-B8k4qzLc.js";import"./dividerClasses-CyVahA2_.js";import"./useSlot-rKYfvtZX.js";import"./resolveComponentProps-CiaLVUp9.js";import"./TextField-CY9PGxTw.js";import"./FormControl-n5stJSNI.js";import"./utils-DoM3o7-Q.js";import"./useFormControl-Dpmr7vsl.js";import"./isMuiElement-CAFVGe91.js";import"./useId-Dw7xLATF.js";import"./formControlState-Dq1zat_P.js";import"./formLabelClasses-Bqyg3GV9.js";import"./Select-Bn0XSVOM.js";import"./Menu-B35cedZz.js";import"./index-A5tg15ia.js";import"./isHostComponent-DVu5iVWx.js";import"./ownerWindow-DIR61fab.js";import"./createChainedFunction-BO_9K8Jh.js";import"./useTheme-ComXvnLb.js";import"./utils-IYGL4P5N.js";import"./Paper-CJvehd4j.js";import"./useSlotProps-C-1mxcRN.js";import"./useControlled-YZkScxzg.js";import"./createSvgIcon-CWX8OS4s.js";import"./OutlinedInput-DEIaZMH-.js";import"./InputAdornment-CIpAdJhB.js";import"./IconButton-D_XHKFyE.js";import"./CircularProgress-DZ31NnjH.js";const ar={title:"Components/Inputs/PhoneNumber",component:e,argTypes:{},parameters:{}},c=m=>{const[i,n]=u.useState();return s(e,{value:i,onChange:a=>n(a),...m,placeholder:"Input phone number"})},r=c.bind({});var t,o,p;r.parameters={...r.parameters,docs:{...(t=r.parameters)==null?void 0:t.docs,source:{originalSource:`args => {
  const [value, setValue] = useState<string>();
  const onChange: PhoneNumberInputProps['onChange'] = newValue => setValue(newValue);
  return <PhoneNumberInput value={value} onChange={onChange} {...args} placeholder="Input phone number" />;
}`,...(p=(o=r.parameters)==null?void 0:o.docs)==null?void 0:p.source}}};const sr=["Empty"];export{r as Empty,sr as __namedExportsOrder,ar as default};
